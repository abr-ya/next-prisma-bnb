// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

model User {
  id String @id @unique

  email        String
  firstName    String
  lastName     String
  profileImage String?
  Home         Home[]
  Favorite     Favorite[]
  Reservation  Reservation[]
  images       Image[]
}

model Home {
  id String @id @default(uuid())

  category      String?

  title         String
  description   String
  price         Int
  imageSrc      String?

  guestCount    Int?
  roomCount     Int?
  bathroomCount Int?

  country      String @default("")
  pinLat       Float @default(0)
  pinLon       Float @default(0)
  
  Favorite     Favorite[]
  Reservation  Reservation[]

  hasStep1     Boolean @default(false)
  hasStep2     Boolean @default(false)
  hasStep3     Boolean @default(false)

  createdAT    DateTime @default(now())
  User         User?    @relation(fields: [userId], references: [id])
  userId       String?

  images       Image[]
}

model Favorite {
  id String @id @default(uuid())

  User   User?   @relation(fields: [userId], references: [id])
  userId String?
  Home   Home?   @relation(fields: [homeId], references: [id])
  homeId String?

  createAt DateTime @default(now())
}

model Reservation {
  id String @id @default(uuid())

  startDate DateTime
  endDate   DateTime
  createdAt DateTime @default(now())

  User   User?   @relation(fields: [userId], references: [id])
  userId String?
  Home   Home?   @relation(fields: [homeId], references: [id])
  homeId String?
}

model Tag {
  id String @id @default(uuid())

  title String
  userId String

  images   Image[]
}

model Folder {
  id String @id @default(uuid())

  title String
  userId String
  parentId String

  images Image[]
}

model Image {
  id String @id @default(uuid())

  url String @unique
  title String?
  userId String
  user User @relation(fields: [userId], references: [id])

  tags Tag[]

  folderId String?
  folder Folder? @relation(fields: [folderId], references: [id])

  homeId String?
  home Home? @relation(fields: [homeId], references: [id])

  createAt DateTime @default(now())
}
